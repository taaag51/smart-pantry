// Code generated by MockGen. DO NOT EDIT.
package mock_usecase

import (
	"reflect"

	"github.com/golang/mock/gomock"
)

// MockIRecipeUsecase is a mock of IRecipeUsecase interface.
type MockIRecipeUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIRecipeUsecaseMockRecorder
}

// MockIRecipeUsecaseMockRecorder is the mock recorder for MockIRecipeUsecase.
type MockIRecipeUsecaseMockRecorder struct {
	mock *MockIRecipeUsecase
}

// NewMockIRecipeUsecase creates a new mock instance.
func NewMockIRecipeUsecase(ctrl *gomock.Controller) *MockIRecipeUsecase {
	mock := &MockIRecipeUsecase{ctrl: ctrl}
	mock.recorder = &MockIRecipeUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRecipeUsecase) EXPECT() *MockIRecipeUsecaseMockRecorder {
	return m.recorder
}

// GetRecipeSuggestions mocks base method.
func (m *MockIRecipeUsecase) GetRecipeSuggestions(userId uint) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecipeSuggestions", userId)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecipeSuggestions indicates an expected call of GetRecipeSuggestions.
func (mr *MockIRecipeUsecaseMockRecorder) GetRecipeSuggestions(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecipeSuggestions", reflect.TypeOf((*MockIRecipeUsecase)(nil).GetRecipeSuggestions), userId)
}
